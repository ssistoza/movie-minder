{"version":3,"sources":["component/ActivityFeed.js","component/SidebarMenu.js","container/SidebarMenuContainer.js","component/Sidebar.js","component/PrivateRoute.js","component/SegmentLoader.js","component/PageTitle.js","component/EmailPasswordForm.js","component/LoginForm.js","container/Signin.js","pages/signin.js","component/SignupForm.js","firebase/context.js","firebase/firebase.config.js","firebase/index.js","firebase/firebase.js","container/Signup.js","pages/signup.js","redux/actions/List.js","helper/index.js","redux/actions/Movie.js","redux/actions/User.js","container/Signout.js","pages/signout.js","component/MovieItem.js","component/PaginateMovieItems.js","component/PaginationButtons.js","component/PaginateMovieList.js","container/Movies.js","container/UsersMovies.js","pages/home.js","component/SearchForm.js","pages/list.js","pages/movies.js","App.js","serviceWorker.js","redux/reducers/Movie.js","redux/reducers/index.js","redux/reducers/List.js","redux/reducers/User.js","redux/index.js","index.js"],"names":["ActivityFeed","_ref","children","react_default","a","createElement","Feed","size","Header","className","as","Event","Content","Summary","BasicSidebarMenu","Fragment","react_router_dom","to","Menu","Item","Icon","name","AuthenticatedSidebarMenu","component_ActivityFeed","SidebarMenu","props","authenticated","SidebarMenu_AuthenticatedSidebarMenu","SidebarMenu_BasicSidebarMenu","SidebarMenuContainer","component_SidebarMenu","this","React","Component","connect","state","SidebarComponent","Sidebar","Pushable","animation","icon","inverted","vertical","visible","width","container_SidebarMenuContainer","Pusher","PrivateRoute","component","auth","rest","Object","objectWithoutProperties","react_router","assign","render","SegmentLoader","loading","placeholder","setLoader","i","_this","setState","Segment","cloneElement","onLoad","PageTitle","Grid","Row","Column","title","EmailPasswordForm","onSubmit","buttonText","autoComplete","component_PageTitle","Form","Field","type","Button","LoginForm","component_EmailPasswordForm","Signin","handleSignin","_callee","event","_event$target","email","password","regenerator_default","wrap","_context","prev","next","preventDefault","target","actions","signinWithFirebase","value","stop","_this$props","history","push","prevProps","_this$props2","component_LoginForm","withRouter","padded","centered","component_SegmentLoader","container_Signin","SignupForm","FirebaseContext","createContext","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","classCallCheck","createUserWithEmailAndPassword","signInWithEmailAndPassword","loggedIn","currentUser","signOut","addNewMovie","newMovie","db","collection","add","objectSpread","getMovies","get","removeMovie","documentId","doc","delete","app","initializeApp","firestore","Signup","handleSignUp","context","t0","console","error","component_SignupForm","contextType","container_Signup","ADD_TO_LIST","ADDED_TO_LIST","addMovieToList","asyncToGenerator","mark","dispatch","getState","response","data","sent","docId","id","setMovieVisibility","MoviesVisibilityFilter","SHOW_ALL","movieList","list","abrupt","_x","_x2","apply","arguments","REQUEST_LIST","RECEIVE_LIST","fetchList","_ref2","_callee2","_context2","received","Date","now","_x3","_x4","REMOVE_FROM_LIST","REMOVED_FROM_LIST","removeFromList","removedFromList","deleteMovieFromList","_ref3","_callee3","removed","_context3","_x5","_x6","updateObject","oldObject","newValues","REQUEST_MOVIES","RECEIVE_MOVIES","requestMovies","page","fetchMovies","url","upcomingMovies","concat","fetch","json","SET_MOVIES_VISIBILITY","SHOW_UPCOMING","SHOW_PAST","visibility","isUpcoming","allMovies","movies","map","movie","currentDate","dateToBeChecked","release_date","getTime","visibilitySet","SET_PAGINATION_PAGE","setPaginationPage","SIGN_IN","SIGNED_IN","signIn","SIGN_OUT","SIGNED_OUT","signoutWithFirebase","Error","Signout","container_Signout","MovieItem","handleClick","f","_this2","poster_path","overview","onMovieAdd","onMovieRemove","List","floated","circular","onClick","Image","src","Popup","trigger","content","Description","dateString","dateForm","monthNum","getUTCMonth","day","getUTCDate","year","getUTCFullYear","formatDate","PaginateMovieItems","paginateMovies","paginationPage","filter","index","PaginationButtons","disableNext","loadingNext","disablePrev","loadingPrev","handleNextClick","e","prevState","onNextClick","onPrevClick","nextButtonProps","disabled","animated","hidden","PaginateMovieList","perPage","handleNextPage","onPageChange","currentPage","totalPages","handlePreviousPage","Math","ceil","length","_this$props3","_this$props4","divided","relaxed","component_PaginateMovieItems","component_PaginationButtons","Movies","getMoreMovies","_this$props$allMovies","apiPage","totalPage","addMovie","isFetching","_this$props3$allMovie","paginateMovieListProps","component_PaginateMovieList","component_MovieItem","key","isHidden","bindActionCreators","AllPossibleActions","UsersMovies","_this$props$movieList","Home","container_UsersMovies","container_Movies","SearchForm","search","releaseDate","watched","notWatched","handleSearch","_ref$target","defineProperty","handleChange","toggle","checked","handleSubmit","log","_this$state","onChange","Group","inline","control","Radio","label","Checkbox","component_SearchForm","App","isAuthenticated","basename","component_Sidebar","component_PrivateRoute","exact","path","signin","Boolean","window","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","undefined","action","arrayOfData","results","needsFiltering","lastUpdated","toConsumableArray","total_pages","receivedMovies","includes","j","shift","setVisibilityFilter","forEach","item","find","loggerMiddleware","createLogger","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composeEnhancer","composeWithDevTools","compose","createStore","configureStore","ReactDOM","Provider","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b10c461e.chunk.js","sourcesContent":["import React from 'react';\nimport { Feed, Header } from 'semantic-ui-react';\n\nconst ActivityFeed = ({ children }) => (\n  <Feed size=\"small\">\n    <Header className=\"white-text\" as=\"h4\">\n      Activity\n    </Header>\n    <Feed.Event>\n      <Feed.Content className=\"feed-format\">\n        <Feed.Summary className=\"white-text\">A movie was added.</Feed.Summary>\n      </Feed.Content>\n    </Feed.Event>\n  </Feed>\n);\n\nexport default ActivityFeed;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport ActivityFeed from './ActivityFeed';\n\nconst SidebarMenu = props => {\n  if (props.authenticated) {\n    return <AuthenticatedSidebarMenu />;\n  }\n  return <BasicSidebarMenu />;\n};\n\nconst BasicSidebarMenu = () => (\n  <>\n    <Link className=\"item\" to=\"/login\">\n      <Menu.Item as=\"span\">\n        <Icon name=\"sign-in\" />\n        Sign In\n      </Menu.Item>\n    </Link>\n  </>\n);\n\nconst AuthenticatedSidebarMenu = () => (\n  <>\n    <Link className=\"item\" to=\"/home\">\n      <Menu.Item as=\"span\">\n        <Icon name=\"home\" />\n        Home\n      </Menu.Item>\n    </Link>\n    <Link className=\"item\" to=\"/list\">\n      <Menu.Item as=\"span\">\n        <Icon name=\"list\" />\n        My List\n      </Menu.Item>\n    </Link>\n    <Link className=\"item\" to=\"/movies\">\n      <Menu.Item as=\"span\">\n        <Icon name=\"video\" />\n        Search Movies\n      </Menu.Item>\n    </Link>\n    <Link className=\"item\" to=\"/signout\">\n      <Menu.Item as=\"span\">\n        <Icon name=\"sign-out\" />\n        Sign Out\n      </Menu.Item>\n    </Link>\n    <div className=\"activity-feed\">\n      <ActivityFeed />\n    </div>\n  </>\n);\n\nexport default SidebarMenu;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SidebarMenu from '../component/SidebarMenu';\n\n/**\n * Class for sidebar menu container.\n *  - Should not be called as this container does no produce a sidebar.\n *  - Get Called by Sidebar component.\n * @class      SidebarMenuContainer (name)\n */\nclass SidebarMenuContainer extends React.Component {\n  render() {\n    return <SidebarMenu authenticated={this.props.authenticated} />;\n  }\n} // SidebarMenuContainer\n\nfunction mapStateToProps(state) {\n  const authenticated = state.authenticated;\n  return { authenticated };\n}\n\nexport default connect(mapStateToProps)(SidebarMenuContainer);\n","import React from 'react';\nimport { Menu, Sidebar } from 'semantic-ui-react';\nimport SidebarMenuContainer from '../container/SidebarMenuContainer';\n\nconst SidebarComponent = ({ children }) => (\n  <Sidebar.Pushable className=\"max-stop-overflow\">\n    <Sidebar\n      as={Menu}\n      animation=\"push\"\n      icon=\"labeled\"\n      inverted\n      vertical\n      visible\n      width=\"thin\"\n    >\n      <SidebarMenuContainer />\n    </Sidebar>\n\n    <Sidebar.Pusher>\n      <div className=\"scrollable-overflow\">{children}</div>\n    </Sidebar.Pusher>\n  </Sidebar.Pushable>\n);\n\nexport default SidebarComponent;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth === true ? (\n        <Component {...props} {...rest} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment } from 'semantic-ui-react';\n\nclass SegmentLoader extends React.Component {\n  state = {\n    loading: false,\n    placeholder: false,\n  };\n\n  static propTypes = {\n    children: PropTypes.element,\n  };\n\n  setLoader = i => {\n    this.setState({ loading: i, placeholder: i });\n  };\n\n  render() {\n    if (this.props.children) {\n      return (\n        <Segment {...this.state}>\n          {React.cloneElement(this.props.children, { onLoad: this.setLoader })}\n        </Segment>\n      );\n    } else {\n      return <Segment placeholder />;\n    }\n  }\n} // SegmentLoader\n\nexport default SegmentLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Header } from 'semantic-ui-react';\n\nconst PageTitle = props => (\n  <Grid.Row>\n    <Grid.Column>\n      <Header as=\"h1\">{props.title}</Header>\n    </Grid.Column>\n  </Grid.Row>\n);\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\n\nconst EmailPasswordForm = ({ onSubmit, title, buttonText, autoComplete }) => (\n  <>\n    <PageTitle title={title} />\n    <Form onSubmit={onSubmit}>\n      <Form.Field>\n        <label>Email</label>\n        <input placeholder=\"johndoe@gmail.com\" type=\"email\" name=\"email\" />\n      </Form.Field>\n      <Form.Field>\n        <label>Password</label>\n        <input type=\"password\" name=\"password\" />\n      </Form.Field>\n      <Button type=\"submit\">{buttonText}</Button>\n    </Form>\n  </>\n);\n\nexport default EmailPasswordForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmailPasswordForm from './EmailPasswordForm';\n\nconst LoginForm = props => (\n  <EmailPasswordForm\n    {...props}\n    autoComplete=\"current-password\"\n    title=\"Please Sign In\"\n    buttonText=\"Sign in\"\n  />\n);\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport LoginForm from '../component/LoginForm';\n\n/** CONTAINER\n * Class to allow users to sign-in to movie-minder app.\n * - Upon authentication, user will be moved to the homepage.\n *\n * @class      Signin (name)\n */\nclass Signin extends React.Component {\n  // If user has logged move away from this page.\n  componentDidMount() {\n    const { authenticated, history } = this.props;\n    if (authenticated) history.push('/home');\n  }\n\n  // Routes to Homepage once user has logged in.\n  componentDidUpdate(prevProps) {\n    const { authenticated, history } = this.props;\n    if (authenticated) history.push('/home');\n  }\n\n  handleSignin = async event => {\n    event.preventDefault();\n    const { email, password } = event.target;\n    this.props.actions.signinWithFirebase(email.value, password.value);\n  };\n\n  render() {\n    return <LoginForm onSubmit={this.handleSignin} />;\n  }\n} // Signin\n\nexport default withRouter(Signin);\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport SegmentLoader from '../component/SegmentLoader';\nimport SigninContainer from '../container/Signin';\n\nclass Signin extends React.Component {\n  render() {\n    return (\n      <Grid padded centered>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <SigninContainer {...this.props} />\n            </SegmentLoader>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n} // Signin\n\nexport default Signin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmailPasswordForm from './EmailPasswordForm';\n\nconst SignupForm = props => (\n  <EmailPasswordForm\n    {...props}\n    autoComplete=\"new-password\"\n    title=\"Sign up for an account\"\n    buttonText=\"Sign up\"\n  />\n);\n\nSignupForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SignupForm;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","// Initialize Firebase\nvar config = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT,\n  storageBucket: process.env.REACT_APP_FIREBASE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING,\n};\n\nexport default config;\n","import FirebaseContext from './context';\nimport FirebaseClass from './firebase';\n\n// Firebase instance => Singleton.\nconst Firebase = new FirebaseClass();\n\nexport default Firebase;\nexport { FirebaseContext, FirebaseClass };\n","import app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport config from './firebase.config';\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.db = app.firestore();\n    this.auth = app.auth();\n  }\n\n  // *** Auth ***\n\n  createUserWithEmailAndPassword = (email, password) => {\n    this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  signInWithEmailAndPassword = (email, password) => {\n    this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  loggedIn = () => this.auth.currentUser;\n  signOut = () => this.auth.signOut();\n\n  // Moving methods to redux => See redux - actions.\n  addNewMovie = newMovie =>\n    this.db.collection('movie-list').add({ ...newMovie });\n  getMovies = () => this.db.collection('movie-list').get();\n  removeMovie = documentId =>\n    this.db\n      .collection('movie-list')\n      .doc(documentId)\n      .delete();\n}\n\nexport default Firebase;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport SignupForm from '../component/SignupForm';\nimport { FirebaseContext } from '../firebase';\n\nclass Signup extends React.Component {\n  static contextType = FirebaseContext;\n\n  handleSignUp = async event => {\n    event.preventDefault();\n\n    const { email, password } = event.target;\n    try {\n      await this.context.createUserWithEmailAndPassword(\n        email.value,\n        password.value\n      );\n      this.props.history.push('/login');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  render() {\n    return <SignupForm onSubmit={this.handleSignUp} />;\n  }\n} // Signup\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport SegmentLoader from '../component/SegmentLoader';\nimport SignupContainer from '../container/Signup';\n\nclass Signup extends React.Component {\n  render() {\n    return (\n      <Grid padded centered>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <SignupContainer />\n            </SegmentLoader>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n} // Signup\n\nexport default Signup;\n","import Firebase from '../../firebase';\nimport { setMovieVisibility, MoviesVisibilityFilter } from './';\n\n/* Create in { CRUD } */\nexport const ADD_TO_LIST = 'ADD_TO_LIST';\nexport const ADDED_TO_LIST = 'ADDED_TO_LIST';\nexport const NOT_ADDED_TO_LIST = 'NOT_ADDED_TO_LIST';\n\nconst addToList = json => ({\n  type: ADD_TO_LIST,\n  data: json,\n});\n\nconst addedToList = docId => ({\n  type: ADDED_TO_LIST,\n  data: docId,\n});\n\n// const notAddedToList = error => ({\n//   type: NOT_ADDED_TO_LIST,\n//   data: error,\n// });\n\n// Thunk\nexport const addMovieToList = newMovie => async (dispatch, getState) => {\n  dispatch(addToList(newMovie));\n  const response = await Firebase.db\n    .collection('movie-list')\n    .add({ ...newMovie });\n  dispatch(addedToList(response.id));\n  dispatch(\n    setMovieVisibility(\n      MoviesVisibilityFilter.SHOW_ALL,\n      getState().movieList.list\n    )\n  );\n  return response;\n};\n\n/* Retrieve in { CRUD } */\nexport const REQUEST_LIST = 'REQUEST_LIST';\nexport const RECEIVE_LIST = 'RECEIVE_LIST';\n\nconst requestList = () => ({ type: REQUEST_LIST });\n\nconst receiveList = json => ({\n  type: RECEIVE_LIST,\n  data: json,\n  received: Date.now(),\n});\n\n// Thunk.\nexport const fetchList = () => async (dispatch, getState) => {\n  dispatch(requestList());\n  const list = await Firebase.db.collection('movie-list').get();\n  dispatch(receiveList(list));\n  dispatch(\n    setMovieVisibility(\n      MoviesVisibilityFilter.SHOW_ALL,\n      getState().movieList.list\n    )\n  );\n  return list;\n};\n\n/* Update in { CRUD } */\n\n/* Delete in { CRUD } */\nexport const REMOVE_FROM_LIST = 'REMOVE_FROM_LIST';\nexport const REMOVED_FROM_LIST = 'REMOVED_FROM_LIST';\nconst removeFromList = docId => ({\n  type: REMOVE_FROM_LIST,\n  data: docId,\n});\n\nconst removedFromList = docId => ({\n  type: REMOVED_FROM_LIST,\n  data: docId,\n});\n\n// Thunk\nexport const deleteMovieFromList = docId => async (dispatch, getState) => {\n  dispatch(removeFromList(docId));\n\n  const removed = await Firebase.db\n    .collection('movie-list')\n    .doc(docId)\n    .delete();\n\n  dispatch(removedFromList(docId));\n  dispatch(\n    setMovieVisibility(\n      MoviesVisibilityFilter.SHOW_ALL,\n      getState().movieList.list\n    )\n  );\n\n  return removed;\n};\n","function formatDate(dateString) {\n  // MovieDB date format YYYY-MM-DD.\n  const dateForm = new Date(dateString);\n  //MMM DD YYYY\n  const monthNum = dateForm.getUTCMonth();\n  const day = dateForm.getUTCDate();\n  const year = dateForm.getUTCFullYear();\n  const MONTH = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sept',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  return `${MONTH[monthNum]}, ${day} ${year}`;\n}\n\nfunction isUpcomingDate(currentDate, dateToBeChecked) {\n  let upcoming = currentDate < new Date(dateToBeChecked).getTime();\n  return upcoming;\n}\n\nfunction updateObject(oldObject, newValues) {\n  return Object.assign({}, oldObject, newValues);\n}\n\nexport { formatDate, updateObject, isUpcomingDate };\n","import { isUpcomingDate } from '../../helper';\n\nexport const REQUEST_MOVIES = 'REQUEST_MOVIES';\nexport const RECEIVE_MOVIES = 'RECEIVE_MOVIES';\n\n/* Create in { CRUD } */\nconst requestMovies = page => ({ type: REQUEST_MOVIES, data: page });\nconst recieveMovies = json => ({\n  type: RECEIVE_MOVIES,\n  data: json,\n  received: Date.now(),\n});\n\n// Thunk\nexport const fetchMovies = page => async dispatch => {\n  dispatch(requestMovies());\n  const url = `${process.env.REACT_APP_MOVIE_URL}&page=${page}`;\n  const response = await fetch(url);\n  const upcomingMovies = await response.json();\n  dispatch(recieveMovies(upcomingMovies));\n};\n\n/* Retreive in { CRUD } */\n/* Update in { CRUD } */\n/* Delete in { CRUD } */\n\n/* Customizations */\nexport const SET_MOVIES_VISIBILITY = 'SET_MOVIES_VISIBILITY';\nexport const MoviesVisibilityFilter = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_UPCOMING: 'SHOW_UPCOMING',\n  SHOW_PAST: 'SHOW_PAST',\n};\n\nconst visibilitySet = (visibility, list, isUpcoming) => ({\n  type: SET_MOVIES_VISIBILITY,\n  visibility,\n  data: list,\n  isUpcoming,\n});\n\nexport const setMovieVisibility = (visibility, list) => {\n  return (dispatch, getState) => {\n    const isUpcoming = getState().allMovies.movies.map(movie => ({\n      id: movie.id,\n      isUpcoming: isUpcomingDate(Date.now(), movie.release_date),\n    }));\n\n    dispatch(visibilitySet(visibility, list, isUpcoming));\n  };\n};\n\nexport const SET_PAGINATION_PAGE = 'SET_PAGINATION_PAGE';\nexport const setPaginationPage = page => ({\n  type: SET_PAGINATION_PAGE,\n  data: page,\n});\n","import Firebase from '../../firebase';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGNED_IN = 'SIGNED_IN';\n\nconst signIn = (email, password) => ({\n  type: SIGN_IN,\n  data: {\n    email,\n    password,\n  },\n});\n\nconst signedIn = user => ({\n  type: SIGNED_IN,\n  data: user,\n});\n\nexport const signinWithFirebase = (email, password) => async (\n  dispatch,\n  getState\n) => {\n  dispatch(signIn());\n  await Firebase.auth.signInWithEmailAndPassword(email, password);\n  const loggedIn = await Firebase.auth.currentUser;\n  dispatch(signedIn(loggedIn));\n};\n\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGNED_OUT = 'SIGNED_OUT';\n\nconst signOut = () => ({\n  type: SIGN_OUT,\n  data: null,\n});\n\nconst signedOut = () => ({\n  type: SIGNED_OUT,\n  data: null,\n});\n\nexport const signoutWithFirebase = () => async (dispatch, getState) => {\n  if (getState().authenticated) {\n    dispatch(signOut());\n    await Firebase.auth.signOut();\n    dispatch(signedOut());\n  } else {\n    throw new Error('No User Signed In');\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signoutWithFirebase } from '../redux/actions';\n\nclass Signout extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(signoutWithFirebase());\n  }\n\n  render() {\n    if (this.props.authenticated) return <div>Signing out...</div>;\n\n    return <div>Signed out!</div>;\n  }\n} // Signout\n\nfunction mapStateToProps(state) {\n  const authenticated = state.authenticated;\n  return { authenticated };\n}\n\nexport default connect(mapStateToProps)(Signout);\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport SegmentLoader from '../component/SegmentLoader';\nimport SignoutContainer from '../container/Signout';\n\nclass Signout extends React.Component {\n  render() {\n    return (\n      <Grid padded centered>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <SignoutContainer />\n            </SegmentLoader>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n} // Signout\n\nexport default Signout;\n","import React from 'react';\nimport { List, Button, Image, Popup } from 'semantic-ui-react';\nimport { formatDate } from '../helper';\n\nclass MovieItem extends React.Component {\n  state = {\n    loading: false,\n  };\n\n  handleClick = f => {\n    this.setState({ loading: true });\n    f();\n  };\n\n  render() {\n    const {\n      poster_path,\n      release_date,\n      title,\n      overview,\n      onMovieAdd,\n      onMovieRemove,\n    } = this.props;\n\n    return (\n      <List.Item>\n        <List.Content floated=\"right\">\n          {onMovieAdd && (\n            <Button\n              circular\n              icon=\"plus\"\n              {...this.state}\n              onClick={() => this.handleClick(onMovieAdd)}\n            />\n          )}\n          {onMovieRemove && (\n            <Button\n              circular\n              icon=\"minus\"\n              {...this.state}\n              onClick={() => this.handleClick(onMovieRemove)}\n            />\n          )}\n        </List.Content>\n        <Image\n          src={\n            poster_path\n              ? `${process.env.REACT_APP_MOVIE_IMAGE}/${poster_path}`\n              : `http://via.placeholder.com/32x52`\n          }\n          size=\"mini\"\n        />\n        <List.Content>\n          <Popup\n            trigger={<List.Header as=\"a\">{title}</List.Header>}\n            content={overview}\n          />\n\n          <List.Description as=\"a\">\n            Release Date: {formatDate(release_date)}\n          </List.Description>\n        </List.Content>\n      </List.Item>\n    );\n  }\n}\nexport default MovieItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Returns number of MovieItem Components based on activePage.\n *\n * @class      PaginateMovieItems (name)\n */\nclass PaginateMovieItems extends React.Component {\n  static propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n    paginationPage: PropTypes.number.isRequired,\n  };\n\n  paginateMovies = () => {\n    const { children, paginationPage } = this.props;\n\n    return children.filter((component, index) => {\n      const start = paginationPage * 10 - 10;\n      const end = paginationPage * 10 - 1;\n      if (index >= start && index <= end) return true;\n      return false;\n    });\n  };\n\n  render() {\n    const tenMovies = this.paginateMovies();\n    return tenMovies;\n  }\n} // PaginateMovieItems\n\nexport default PaginateMovieItems;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\n\nclass PaginationButtons extends React.Component {\n  state = {\n    disableNext: false,\n    loadingNext: false,\n    disablePrev: false,\n    loadingPrev: false,\n  };\n\n  handleNextClick = e => {\n    this.setState(prevState => ({\n      disableNext: !prevState.disableNext,\n      loadingNext: !prevState.loadingNext,\n    }));\n\n    this.props.onNextClick();\n\n    this.setState(prevState => ({\n      disableNext: !prevState.disableNext,\n      loadingNext: !prevState.loadingNext,\n    }));\n  };\n\n  render() {\n    const { onPrevClick, paginationPage } = this.props;\n\n    const nextButtonProps = {\n      disabled: this.state.disableNext,\n      loading: this.state.loadingNext,\n      onClick: this.handleNextClick,\n    };\n\n    return (\n      <div>\n        <Button size=\"mini\" animated onClick={onPrevClick}>\n          <Button.Content visible>Prev</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"arrow left\" />\n          </Button.Content>\n        </Button>\n        <Button size=\"mini\" animated {...nextButtonProps}>\n          <Button.Content visible>Next</Button.Content>\n          <Button.Content hidden>\n            <Icon name=\"arrow right\" />\n          </Button.Content>\n        </Button>\n        <span>Page {paginationPage}</span>\n      </div>\n    );\n  }\n} // PaginationButtons\n\nexport default PaginationButtons;\n","import React from 'react';\nimport { List } from 'semantic-ui-react';\nimport PaginateMovieItems from './PaginateMovieItems';\nimport PaginationButtons from './PaginationButtons';\n\n/**\n * List of paginated movies.\n *  - Will determine how items should show on the page and pass it down.\n * @class      PaginateMovieList (name)\n */\nclass PaginateMovieList extends React.Component {\n  state = {\n    perPage: 10, // Change this to determine how much movie items are render on a page.\n  };\n\n  componentDidMount() {\n    // If there are only 2 pages. Fetch more.\n    const { paginationPage, fetchMovies } = this.props;\n    let currentPage = paginationPage;\n    let totalPages = this.totalPages();\n\n    if (currentPage === totalPages - 1) {\n      fetchMovies();\n    }\n  }\n\n  handleNextPage = () => {\n    const { onPageChange, paginationPage, fetchMovies } = this.props;\n    let currentPage = paginationPage;\n    let totalPages = this.totalPages();\n\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n      if (currentPage + 1 === totalPages - 1) {\n        // Start a new fetch if it is the beginning of the last page.\n        fetchMovies();\n      }\n    }\n  };\n\n  handlePreviousPage = () => {\n    const { onPageChange, paginationPage } = this.props;\n    if (paginationPage > 1) {\n      onPageChange(paginationPage - 1);\n    }\n  };\n\n  totalPages = () => Math.ceil(this.props.children.length / this.state.perPage);\n\n  render() {\n    const { children, paginationPage } = this.props;\n\n    return (\n      <>\n        <List divided relaxed>\n          <PaginateMovieItems paginationPage={paginationPage}>\n            {children}\n          </PaginateMovieItems>\n        </List>\n        <PaginationButtons\n          paginationPage={paginationPage}\n          totalPages={this.totalPages(children.length)}\n          onPrevClick={this.handlePreviousPage}\n          onNextClick={this.handleNextPage}\n        />\n      </>\n    );\n  }\n} // PaginateMovieList\n\nexport default PaginateMovieList;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport MovieItem from '../component/MovieItem';\nimport PaginateMovieList from '../component/PaginateMovieList';\nimport * as AllPossibleActions from '../redux/actions';\n\nclass Movies extends React.Component {\n  componentDidMount() {\n    const {\n      onLoad,\n      actions: { fetchMovies },\n    } = this.props;\n    onLoad(true);\n    fetchMovies();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.allMovies.isFetching) this.props.onLoad(false);\n  }\n\n  getMoreMovies = () => {\n    const {\n      actions: { fetchMovies },\n      allMovies: { apiPage, totalPage },\n    } = this.props;\n\n    if (apiPage < totalPage) {\n      fetchMovies(apiPage + 1);\n    }\n  };\n\n  addMovie = movie => {\n    const {\n      actions: { addMovieToList },\n    } = this.props;\n    addMovieToList(movie);\n  };\n\n  render() {\n    const {\n      actions: { setPaginationPage },\n      allMovies: { movies, paginationPage },\n    } = this.props;\n\n    if (movies.length <= 0) {\n      return <p>No Movies!</p>;\n    }\n\n    const paginateMovieListProps = {\n      onPageChange: setPaginationPage,\n      fetchMovies: this.getMoreMovies,\n      paginationPage,\n    };\n\n    return (\n      <>\n        <PaginateMovieList {...paginateMovieListProps}>\n          {/* Replace with list for unpaginated version.*/}\n          {movies.map(movie => (\n            <MovieItem\n              key={movie.id}\n              {...movie}\n              onMovieAdd={() => this.addMovie(movie)}\n            />\n          ))}\n        </PaginateMovieList>\n      </>\n    );\n  }\n} // Movies\n\nfunction mapStateToProps(state) {\n  let allMovies = state.allMovies;\n\n  // Get only movies not in the list.\n  const movies = allMovies.movies.filter(i => !i.isHidden);\n  allMovies = Object.assign({}, allMovies, { movies });\n  return { allMovies };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(AllPossibleActions, dispatch) };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Movies);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { List } from 'semantic-ui-react';\nimport MovieItem from '../component/MovieItem';\nimport { fetchList, deleteMovieFromList } from '../redux/actions';\n\n/**\n * List of user movies.\n *\n * @class      UsersMovies (name)\n */\nclass UsersMovies extends React.Component {\n  componentDidMount() {\n    const { dispatch, onLoad } = this.props;\n    onLoad(true);\n    dispatch(fetchList());\n  }\n\n  componentDidUpdate() {\n    if (!this.props.movieList.isFetching) {\n      this.props.onLoad(false);\n    }\n  }\n\n  removeMovie = docId => {\n    const { dispatch } = this.props;\n    dispatch(deleteMovieFromList(docId));\n  };\n\n  render() {\n    const { isFetching, list } = this.props.movieList;\n\n    if (isFetching) {\n      return null;\n    }\n\n    return (\n      <List divided relaxed>\n        {list.map(movie => (\n          <MovieItem\n            key={movie.docId}\n            {...movie}\n            onMovieRemove={() => this.removeMovie(movie.docId)}\n          />\n        ))}\n      </List>\n    );\n  }\n} // UsersMovies\n\nfunction mapStateToProps(state) {\n  const movieList = state.movieList || { isFetching: true, list: [] };\n  return { movieList };\n}\n\nexport default connect(mapStateToProps)(UsersMovies);\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport PageTitle from '../component/PageTitle';\nimport SegmentLoader from '../component/SegmentLoader';\nimport Movies from '../container/Movies';\nimport UsersMovies from '../container/UsersMovies';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Grid padded>\n        <PageTitle title=\"Welcome to the Homepage\" />\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <UsersMovies />\n            </SegmentLoader>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <Movies />\n            </SegmentLoader>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n} // Home\n\nexport default Home;\n","import React from 'react';\nimport { Form, Button, Radio, Checkbox } from 'semantic-ui-react';\n\nclass SearchForm extends React.Component {\n  state = {\n    search: '',\n    releaseDate: '',\n    watched: false,\n    notWatched: false,\n  };\n\n  handleSearch = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  toggle = (e, { name, checked }) => {\n    this.setState({ [name]: checked });\n  };\n\n  handleSubmit = e => {\n    console.log(e.target);\n  };\n\n  render() {\n    const { releaseDate, search, watched, notWatched } = this.state;\n    return (\n      <>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>Search</label>\n            <input\n              placeholder=\"Search...\"\n              type=\"text\"\n              name=\"search\"\n              onChange={this.handleSearch}\n              value={search}\n            />\n          </Form.Field>\n          <Form.Group inline>\n            <label>Filter by Release Date</label>\n            <Form.Field\n              control={Radio}\n              name=\"releaseDate\"\n              label=\"Past\"\n              value=\"past\"\n              checked={releaseDate === 'past'}\n              onChange={this.handleChange}\n            />\n            <Form.Field\n              control={Radio}\n              name=\"releaseDate\"\n              label=\"Upcoming\"\n              value=\"upcoming\"\n              checked={releaseDate === 'upcoming'}\n              onChange={this.handleChange}\n            />\n            <Form.Field\n              control={Radio}\n              name=\"releaseDate\"\n              label=\"All\"\n              value=\"all\"\n              checked={releaseDate === 'all'}\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group inline>\n            <label>Filter by Watched</label>\n            <Form.Field\n              name=\"watched\"\n              control={Checkbox}\n              label=\"Watched\"\n              checked={watched}\n              onChange={this.toggle}\n            />\n            <Form.Field\n              name=\"notWatched\"\n              control={Checkbox}\n              label=\"Not Watched\"\n              checked={notWatched}\n              onChange={this.toggle}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Search</Button>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport PageTitle from '../component/PageTitle';\nimport SegmentLoader from '../component/SegmentLoader';\nimport SearchForm from '../component/SearchForm';\nimport UsersMovies from '../container/UsersMovies';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Grid padded>\n        <PageTitle title=\"Filter Through List\" />\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <UsersMovies />\n            </SegmentLoader>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <SegmentLoader>\n              <SearchForm />\n            </SegmentLoader>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n} // Home\n\nexport default Home;\n","import React from 'react';\n\nclass Movies extends React.Component {\n  render() {\n    return <div>Movies Component! </div>;\n  }\n} // Movies\n\nexport default Movies;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n// Components\nimport Sidebar from './component/Sidebar';\nimport PrivateRoute from './component/PrivateRoute';\n\n// Pages\nimport Signin from './pages/signin';\nimport Signup from './pages/signup';\nimport Signout from './pages/signout';\nimport Home from './pages/home';\nimport List from './pages/list';\nimport Movies from './pages/movies';\n\n// Actions\nimport * as AllPossibleActions from './redux/actions';\n\nimport './App.css';\n\n/**\n * Class for application.\n * - App needs to know who is signed in to be able to distinguish who can access the routes.\n * @class      App (name)\n */\n\nclass App extends React.Component {\n  isAuthenticated = () => (this.props.authenticated ? true : false);\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Sidebar>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/home\"\n              component={Home}\n              auth={this.isAuthenticated()}\n            />\n            <PrivateRoute\n              exact\n              path=\"/list\"\n              component={List}\n              auth={this.isAuthenticated()}\n            />\n            <PrivateRoute\n              exact\n              path=\"/signout\"\n              component={Signout}\n              auth={this.isAuthenticated()}\n            />\n            <PrivateRoute\n              exact\n              path=\"/movies\"\n              component={Movies}\n              auth={this.isAuthenticated()}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => (\n                <Signin\n                  authenticated={this.isAuthenticated()}\n                  actions={this.props.actions}\n                />\n              )}\n            />\n            <Route exact path=\"/signup\" component={Signup} />\n          </Switch>\n        </Sidebar>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const authenticated = state.authenticated;\n  return { authenticated };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(AllPossibleActions, dispatch) };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  REQUEST_MOVIES,\n  RECEIVE_MOVIES,\n  SET_MOVIES_VISIBILITY,\n  SET_PAGINATION_PAGE,\n} from '../actions';\n\nimport { updateObject } from '../../helper';\n\nconst INITIAL_STATE = {\n  isFetching: true,\n  apiPage: 1,\n  paginationPage: 1,\n  movies: [],\n};\n\nfunction receivedMovies(state, action) {\n  let arrayOfData = action.data.results;\n  arrayOfData = arrayOfData.map(i => ({\n    ...i,\n    isHidden: false,\n  }));\n\n  return updateObject(state, {\n    needsFiltering: true,\n    isFetching: false,\n    lastUpdated: action.received,\n    movies: [...state.movies, ...arrayOfData],\n    apiPage: action.data.page,\n    totalPage: action.data.total_pages,\n  });\n}\n\nfunction setVisibilityFilter(state, action) {\n  const list = action.data.map(i => i.id);\n  let movies = state.movies.map(i =>\n    list.includes(i.id)\n      ? updateObject(i, { isHidden: true })\n      : updateObject(i, { isHidden: false })\n  ); // Regardless HIDE any movies part of the list.\n\n  switch (action.visibility) {\n    case 'SHOW_ALL':\n      break;\n    case 'SHOW_PAST':\n      movies = movies.map(i => {\n        if (!action.isUpcoming.filter(j => j.id === i.id).shift().isUpcoming) {\n          return i;\n        } else {\n          if (i.isHidden) {\n            return i;\n          }\n          return updateObject(i, { isHidden: true });\n        }\n      });\n      break;\n    case 'SHOW_UPCOMING':\n    default:\n      movies = movies.map(i => {\n        if (action.isUpcoming.filter(j => j.id === i.id).shift().isUpcoming) {\n          return i;\n        } else {\n          if (i.isHidden) {\n            return i;\n          }\n          return updateObject(i, { isHidden: true });\n        }\n      });\n  }\n  return updateObject(state, {\n    needsFiltering: false,\n    movies,\n    visibility: action.visibility,\n  });\n}\n\nfunction setPaginationPage(state, action) {\n  return updateObject(state, { paginationPage: action.data });\n}\n\nexport const allMovies = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_MOVIES:\n      return updateObject(state, { isFetching: true });\n    case RECEIVE_MOVIES:\n      return receivedMovies(state, action);\n    case SET_MOVIES_VISIBILITY:\n      return setVisibilityFilter(state, action);\n    case SET_PAGINATION_PAGE:\n      return setPaginationPage(state, action);\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { allMovies } from './Movie';\nimport { movieList } from './List';\nimport { authenticated } from './User';\n\nconst rootReducer = combineReducers({\n  allMovies,\n  movieList,\n  authenticated,\n});\n\nexport default rootReducer;\n","import {\n  ADD_TO_LIST,\n  ADDED_TO_LIST,\n  REQUEST_LIST,\n  RECEIVE_LIST,\n  REMOVE_FROM_LIST,\n  REMOVED_FROM_LIST,\n} from '../actions';\n\nexport const movieList = (state = { list: [] }, action) => {\n  switch (action.type) {\n    case REQUEST_LIST:\n      return Object.assign({}, state, {\n        isFetching: true,\n      });\n    case RECEIVE_LIST: {\n      let list = [];\n\n      action.data &&\n        action.data.forEach(doc => {\n          list = [...list, { docId: doc.id, ...doc.data() }];\n        });\n\n      return Object.assign({}, state, {\n        list,\n        isFetching: false,\n        lastUpdated: action.received,\n      });\n    }\n    case REMOVE_FROM_LIST:\n    case REMOVED_FROM_LIST: {\n      const list = state.list.filter(movie => movie.docId !== action.data);\n      return Object.assign({}, state, {\n        list,\n      });\n    }\n    case ADD_TO_LIST: {\n      // Optimistic ==> At this time no-idea of docId.\n      const list = [...state.list, { docId: 'awaiting', ...action.data }];\n      return Object.assign({}, state, { list });\n    }\n    case ADDED_TO_LIST: {\n      // Update docId.\n      const list = state.list.filter(movie => movie.docId !== 'awaiting');\n      let item = state.list.find(movie => movie.docId === 'awaiting');\n      item.docId = action.data;\n      return Object.assign({}, state, { list: [...list, item] });\n    }\n    default:\n      return state;\n  }\n};\n","import { SIGN_IN, SIGNED_IN, SIGN_OUT, SIGNED_OUT } from '../actions';\n\nconst INITIAL_STATE = false;\n\nexport const authenticated = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGNED_IN:\n      return true;\n    case SIGNED_OUT:\n      return false;\n    case SIGN_IN:\n    case SIGN_OUT:\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers/index';\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n  let middlewares = [];\n\n  if (process.env !== 'production') {\n    middlewares = [thunkMiddleware];\n  } else {\n    middlewares = [thunkMiddleware, loggerMiddleware];\n  }\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composeEnhancer =\n    process.env !== 'production'\n      ? composeWithDevTools(...enhancers)\n      : compose(...enhancers);\n\n  return createStore(rootReducer, preloadedState, composeEnhancer);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Firebase, { FirebaseContext } from './firebase';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './redux';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <FirebaseContext.Provider value={Firebase}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}